# You can have multiple sections, just name them appropriately
[kernel.org]
# Where is the manifest containing the list of repositories?
manifest = /var/lib/git/mirror/manifest.js.gz
#
# Where are the repositories kept?
#toplevel = /var/lib/git/mirror
toplevel = /var/lib/git/mirror
#
# Where do we put the logs?
#log = /var/log/mirror/kernelorg-fsck.log
log = /var/log/mirror/kernelorg-fsck.log
#
# Log level can be "info" or "debug"
#loglevel = info
loglevel = info
#
# Make sure there is only one instance of grok-fsck running by
# trying to exclusive-lock this file before we do anything.
lock = /var/lock/mirror/kernelorg-fsck.lock
#
# Where to keep the status file
#statusfile = /var/lib/mirror/kernelorg-fsck.js
statusfile = /var/lib/mirror/kernelorg-fsck.js
#
# How often should we check each repository, in days.
# Any newly added repository will have the first check within a random
# period of 0 and $frequency, and then every $frequency after that,
# to assure that not all repositories are checked on the same day.
# Don't set to less than 7 unless you only mirror a few repositories
# (or really like to thrash your disks).
#frequency = 30
frequency = 30
#
# Not all repositories take a long time to check. This option lets you
# allocate some time after each run to check small repositories. Grok-fsck
# will then sort all repos not already checked during the usual run by their
# elapsed time, and run an fsck check on each of them until the allotted time
# for quick checks is elapsed.
# Note that if you only have a few repos, this pretty much obsoletes
# "frequency" if it takes less than this much time to check them all.
#quick_checks_max_min = 5
quick_checks_max_min = 5
#
# Enable this option to repack the repository before calling git-fsck.
# This will allow you to save some space if you have shared repositories.
# To check if you have shared repositories, look at your manifest.js.gz to
# see if any repository definition has a "reference" key.
#repack = yes
